!function(angular){var app=this.app=angular.module("questFyApp",["ngRoute","ngStorage","ngTouch","ui.bootstrap","ngSwipeHandler"]);app.run(["$location","$rootScope","$route",function($location,$rootScope,$route){$rootScope.$on("$routeChangeSuccess",function(){$rootScope.title=$route.current.$$route.title})}]),app.controller("MainController",function($scope,Config,$route,$routeParams,$location,$swipe,SwipeInstance){$scope.$route=$route,$scope.$routeParams=$routeParams,$scope.$location=$location,$scope.config=Config,$scope.menu=[],angular.forEach($route.routes,function(route,link){route.menu&&$scope.menu.push({title:route.title,link:link})}),$scope.aside={open:!1,openAside:function(open){$scope.aside.open=angular.isUndefined(open)?!$scope.aside.open:open}},$scope.pedrinho=new SwipeInstance,console.log($scope.pedrinho),$scope.aloha=new SwipeInstance({priority:100,move:function(){console.log("MOVEU")}})}),app.factory("Config",function(){var Config=function(){var url="http://localhost/klaus/quest-fy/",root="app/",img="assets/img/",js="assets/js/",css="assets/css/",components="components/";this.img=url+img,this.js=url+js,this.css=url+css,this.components=root+components,this.baseUrl=function(route){return url+"#"+route}};return new Config})}(window.angular),function(){var components="app/components/";app.config(function($routeProvider,$locationProvider){$routeProvider.otherwise({redirectTo:"/"}).when("/",{templateUrl:components+"todo/todoView.html",controller:"TodoController",title:"My Tasks",menu:!0}).when("/outro-teste",{templateUrl:components+"teste/testeView.html",controller:"TodoController",title:"Oh shit this is awesome",menu:!0}),$locationProvider.html5Mode(!1)})}(window.angular),function(){app.controller("TesteController",function($scope,Config,$route){$scope.name="TesteController",$scope.config=Config,$scope.$route=$route})}(window.angular),function(){app.controller("TodoController",function($scope,Config,Task,$localStorage,$modal,$route,$routeParams,$filter,$swipe,SwipeInstance){$scope.name="TodoController",$scope.config=Config,$scope.taskFct=Task,$scope.newList="",$scope.$watch("newList.title",function(){$scope.newList.title=$filter("capitalize")($scope.newList.title)}),$scope.$storage=$localStorage.$default({lists:[],rewards:[],order:[]}),$scope.open=function(task){$modal.open({templateUrl:Config.baseUrl("app/components/shared/modal/taskModalView.html"),controller:"TaskModalController",resolve:{task:function(){return task}}})},$scope.lists=$scope.$storage.lists,$scope.rewards=$scope.$storage.rewards,$scope.toogleChecked=function(list,task){var taskIndex=(listIndex=$scope.lists.indexOf(list),$scope.lists[listIndex].tasks.indexOf(task));$scope.lists[listIndex].tasks[taskIndex].done=!$scope.lists[listIndex].tasks[taskIndex].done},$scope.addList=function(list){$scope.lists.push({title:list.title,tasks:[],newTask:{}}),$scope.$storage.lists=$scope.$storage.lists?$scope.$storage.lists:$scope.lists},$scope.deleteAllLists=function(){delete $scope.$storage.lists,$scope.lists=[]},$scope.addTask=function(list,task){if(task.name){var index=$scope.lists.indexOf(list);task.done=task.done||!1,$scope.lists[index].tasks.push({name:task.name,done:task.done,options:!1,status:0})}},$scope.alohinha=new SwipeInstance({priority:101,move:function(){console.log("MOVEU2")}})}),app.controller("TaskModalController",function($scope,$modalInstance,task){console.log(task),$scope.task=task})}(window.angular),function(angular){app.directive("taskList",function(){return{restrict:"E",templateUrl:"app/components/todo/taskListView.html"}}),app.directive("task",function(){return{restrict:"E",templateUrl:"app/components/todo/taskView.html"}}),app.directive("taskPreview",function(){return{restrict:"E",templateUrl:"app/components/todo/taskPreviewView.html"}}),app.factory("Task",function($localStorage){return{showTask:function(task){alert(task.name)},cloneTask:function(list,task){var clonedTask=angular.copy(task);clonedTask.options=!1,list.tasks.push(clonedTask)},toogleOption:function(list,task){angular.forEach(list.tasks,function(tasks,index){index!=list.tasks.indexOf(task)&&(tasks.options=!1)}),angular.isUndefined(task)||(task.options=!task.options)},deleteTask:function(list,task){var listIndex=$localStorage.lists.indexOf(list),taskIndex=list.tasks.indexOf(task);$localStorage.lists[listIndex].tasks.splice([taskIndex],1)},updateStatus:function(list,task,value){var listIndex=$localStorage.lists.indexOf(list),taskIndex=list.tasks.indexOf(task),status=$localStorage.lists[listIndex].tasks[taskIndex].status;5>=status+value&&status+value>=-5&&($localStorage.lists[listIndex].tasks[taskIndex].status+=value)}}}),app.filter("taskStatus",function(){return function(status){return 0>status&&status>=-5?"status-negative-"+Math.abs(status):status>0&&5>=status?"status-positive-"+status:""}})}(window.angular);